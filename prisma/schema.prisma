generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["electro"]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@schema("electro")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("electro")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  cart          Cart[]
  orders        Order[]

  @@schema("electro")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@schema("electro")
}

model Product {
  id                 String   @id @default(cuid())
  title              String
  subTitle           String
  description        String?
  imageUrls          String[]
  categoryId         String?
  sellingPrice       Int      @default(0)
  maximumRetailPrice Int      @default(0)
  manufacturer       String?
  rating             Decimal  @default(5)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  carts Cart[]
  trait Trait[]

  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@schema("electro")
}

model Category {
  id          String    @id @default(cuid())
  name        String
  imageUrl    String
  redirectUrl String
  product     Product[]

  @@schema("electro")
}

model Trait {
  id       String    @id @default(cuid())
  name     String
  products Product[]

  @@schema("electro")
}

model Cart {
  id       String    @id @default(cuid())
  userId   String
  products Product[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("electro")
}

model Banner {
  id          String @id @default(cuid())
  imageUrl    String
  redirectUrl String
  type        String

  @@schema("electro")
}

model Order {
  id         String         @id @default(cuid())
  products   ProductItems[]
  orderTotal Int            @default(0)
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("electro")
}

model ProductItems {
  id                     String @id @default(cuid())
  product_id             String
  product_title          String
  product_sub_title      String
  product_quantity       Int    @default(1)
  product_current_price  Int
  product_original_price Int

  orderId String
  order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@schema("electro")
}
